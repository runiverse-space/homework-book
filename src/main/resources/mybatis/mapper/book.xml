<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.dao.BookDao">
    <insert id="insert" parameterType="Book">
        <selectKey keyProperty="bid" resultType="int" order="BEFORE"> 
            select seq_book_bid.nextval from dual 
        </selectKey> 
        
        insert into book (bid, btitle, bpublisher, bprice, bauthor, battachoname, battachsname, battachtype, battachdata) 
        values (#{bid}, #{btitle}, #{bpublisher}, #{bprice}, #{bauthor}, #{battachoname}, #{battachsname}, #{battachtype}, #{battachdata}) 
    </insert>

    <select id="selectByBid" parameterType="int" resultType="Book"> 
        select bid, btitle, bpublisher, bprice, bauthor, battachoname, battachsname, battachtype, battachdata 
        from book 
        where bid = #{value} 
    </select>

    <!-- 
	1. 서브쿼리 사용하는 이유: rownum은 order by보다 먼저 적용되기 때문에, 원하는 순서대로 정렬하려면 서브쿼리가 필요하다. 
	   서브쿼리로 order by를 먼저 정렬하고, 그 결과를 rownum에서 사용한다.
	2. rownum(as rnum: 별칭)으로 각 행에 번호를 붙이고, rownum <= endRowNo으로 큰 범위를 먼저 구한다. (예: 1~50행)
	   그 후에 rnum >= startRowNo 조건으로 원하는 페이지 구간을 구한다. (예: 11~20행)
	
	지정된 범위의 행만 조회하기 위한 쿼리문이다.
    -->
    <select id="selectByPage" resultType="Book">
      <![CDATA[
      select rnum, bid, btitle, bpublisher, bprice, bauthor
      from (
          select rownum as rnum, bid, btitle, bpublisher, bprice, bauthor
          from (
              select bid, btitle, bpublisher, bprice, bauthor
              from book
              order by bid desc
          )
          where rownum <= #{endRowNo}
      )
      where rnum >= #{startRowNo}
      ]]>
    </select>

    <update id="update" parameterType="Book"> 
        update book 
        set btitle=#{btitle}, bpublisher=#{bpublisher}, bprice=#{bprice}, bauthor=#{bauthor} 
        <if test="battachoname != null"> 
            , battachoname=#{battachoname} 
            , battachsname=#{battachsname} 
            , battachtype=#{battachtype} 
            , battachdata=#{battachdata} 
        </if> 
        where bid=#{bid} 
    </update>

    <select id="countAll"
        resultType="int"> select count(*) from book
    </select>

    <delete id="delete" parameterType="int"> 
        delete from book where bid=#{bid} 
    </delete>
</mapper>